@page "/chats/new"
@layout AppLayout

<PageTitle>New Chat</PageTitle>

<TopBar Page="New Chat" />

<main>
    <div class="chats-search">
        <SearchIcon />
        <input type="text" placeholder="Search" />
    </div>

    <form class="temporary-form create-room">
        <div>
            <label>Chat Name</label>
            <input type="text" @bind="roomName" placeholder="Select a chat name" />
        </div>
        <div>
            <button class="btn btn-sm btn-primary" @onclick="CreateNewRoom">Create</button>
        </div>
    </form>

    <article class="friends-list">
        @if (SelectedFriends.Count > 0)
        {
            <div class="selected-friends  @(collapseSelected ? "collapsed" : "")">
                <header>
                    <h3>Selected Friends <span>@SelectedFriends.Count()</span></h3>
                    <button class="icon-btn collapse-btn" @onclick='() => ToggleList("selected")'><ChevronDownIcon /></button>
                </header>
                <ul>
                    @foreach (var friend in SelectedFriends)
                    {
                        <li @key=friend><FriendCard Friend=@friend Page="New Chat" List="selected" IsSelected=true OnSelect=SelectFriend OnDeselect=DeselectFriend /></li>
                    }
                </ul>
            </div>
        }
        <div class="all-friends  @(collapseAll ? "collapsed" : "")">
            <header>
                <h3>All Friends <span>@Friends.Count()</span></h3>
                <button class="icon-btn collapse-btn" @onclick='() => ToggleList("all")'><ChevronDownIcon /></button>
            </header>
            <ul>
                @foreach (var friend in Friends)
                {
                    if (!SelectedFriends.Contains(friend))
                    {
                        <li @key=friend><FriendCard Friend=@friend Page="New Chat" List="all" IsSelected=false OnSelect=SelectFriend OnDeselect=DeselectFriend /></li>
                    } else
                    {
                        <li @key=friend><FriendCard Friend=@friend Page="New Chat" List="all" IsSelected=true OnSelect=SelectFriend OnDeselect=DeselectFriend /></li>
                    }
                }
            </ul>
        </div>
    </article>

</main>

@if (SelectedFriends.Count > 0)
{
    <BottomBar Page="New Chat" />
}

@code {
    string roomName = "";
    List<string> Friends = [];
    List<string> SelectedFriends = [];
    bool collapseAll;
    bool collapseSelected;

    protected override void OnInitialized()
    {
        Friends.Add("Christine");
        Friends.Add("Joseph");
        Friends.Add("Laura");
        Friends.Add("Fernando");
        Friends.Add("Yoojung");
        Friends.Add("Ana");

        Friends = Friends.OrderBy(f => f).ToList();
    }

    private async Task CreateNewRoom()
    {
        // var room = new Room(roomName);
        var room = new CreateRoomRequest(roomName, "public");
        var newRoom = await Chats.CreateRoomAsync(room);

        Nav.NavigateTo("/");
    }

    void SelectFriend(string friend)
    {
        if (SelectedFriends.Contains(friend))
        {
            return;
        } else
        {
            SelectedFriends.Add(friend);
        }
    }

    void DeselectFriend(string friend)
    {
        if (SelectedFriends.Contains(friend))
        {
            SelectedFriends.Remove(friend);
        }
    }

    void ToggleList(string list)
    {
        if (list == "all")
        {
            collapseAll = !collapseAll;
        } else if (list == "selected")
        {
            collapseSelected = !collapseSelected;
        }
    }
}